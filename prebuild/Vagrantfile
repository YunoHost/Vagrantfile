# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
export DEBIAN_FRONTEND=noninteractive

# Configure guest hostname
sudo bash -c 'echo 127.0.1.1 yunohost.yunohost.org yunohost >> /etc/hosts'
sudo hostname yunohost.yunohost.org
sudo bash -c 'echo yunohost.yunohost.org > /etc/hostname'

# Define root password
echo -e "yunohost\nyunohost" | sudo passwd root

# Allow sudo removal (YunoHost use sudo-ldap)
export SUDO_FORCE_REMOVE=yes

# Upgrade guest (done in install script)
# sudo apt-get update
# sudo apt-get -y --force-yes upgrade
# sudo apt-get -y --force-yes dist-upgrade

# Install YunoHost
wget https://raw.githubusercontent.com/YunoHost/install_script/master/install_yunohost -q -O /tmp/install_yunohost
sudo bash /tmp/install_yunohost -a -d $1

# Cleanup
sudo apt-get clean -y
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Default folder sharing
  config.vm.synced_folder ".", "/vagrant"
  # Force guest type, because YunoHost /etc/issue can be tuned
  config.vm.guest = :debian
  # Force first network device to be cable connected, not connected by default on Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
  end
  
  # Debian Jessie 64 bits with YunoHost stable release
  config.vm.define "jessie-amd64-stable", primary: true do |stable|
    stable.vm.box = "debian/contrib-jessie64"
    stable.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'stable'"
    end
    stable.vm.network :private_network, ip: "192.168.33.80"
  end

  # Debian Jessie 64 bits with YunoHost testing release
  config.vm.define "jessie-amd64-testing" do |testing|
    testing.vm.box = "debian/contrib-jessie64"
    testing.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'testing'"
    end
    testing.vm.network :private_network, ip: "192.168.33.81"
  end

  # Debian Jessie 64 bits with YunoHost unstable (nightly) release
  config.vm.define "jessie-amd64-unstable" do |unstable|
    unstable.vm.box = "debian/contrib-jessie64"
    unstable.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'unstable'"
    end
    unstable.vm.network :private_network, ip: "192.168.33.82"
  end

  # Debian Jessie 32 bits with YunoHost stable release
  config.vm.define "jessie-i386-stable" do |stable|
    stable.vm.box = "bento/debian-8.6-i386"
    stable.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'stable'"
    end
    stable.vm.network :private_network, ip: "192.168.33.83"
  end

  # Debian Jessie 32 bits with YunoHost testing release
  config.vm.define "jessie-i386-testing" do |testing|
    testing.vm.box = "bento/debian-8.6-i386"
    testing.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'testing'"
    end
    testing.vm.network :private_network, ip: "192.168.33.84"
  end

  # Debian Jessie 32 bits with YunoHost unstable (nightly) release
  config.vm.define "jessie-i386-unstable" do |unstable|
    unstable.vm.box = "bento/debian-8.6-i386"
    unstable.vm.provision "shell" do |s|
      s.inline = $script
      s.args   = "'unstable'"
    end
    unstable.vm.network :private_network, ip: "192.168.33.85"
  end

end
